apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastpass-service
  namespace: test-namespace
spec:
  #minReadySeconds: 30 #30 seconds delay after ready all its pods and replicaset
  selector:
    matchLabels:
      app: fastpass-service  
  replicas: 2
  template: #template for the pods
    metadata:
      annotations:
        kubernetes.io/change-cause: "image version test-namespace"
      labels:
        app: fastpass-service
    spec:
      containers:
      - name: fastpass-service
        image: assaduzzaman/eureka-fastpass-service:test-namespace
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"      
#------------------ports---------------              
        ports:
        - name: fss-cport
          containerPort: 8086
#-------------liveness readyness-------------------
        # livenessProbe:
        #   httpGet:
        #     path: /actuator/health
        #     port: fss-cport
        #   initialDelaySeconds: 20
        #   timeoutSeconds: 30
#------------- readyness-------------------          
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: fss-cport
          initialDelaySeconds: 20
          timeoutSeconds: 30
#--------------------------------          
      restartPolicy: Always  

#      nodeSelector:
#         nodeTwo: node153
---
apiVersion: v1
kind: Service
metadata:
  name: fastpass-service
  namespace: test-namespace
spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: fastpass-service

  ports:
    - name: fss-cport
      port: 8086
      targetPort: 8086
      nodePort: 30186
  #type: ClusterIP
  type: NodePort